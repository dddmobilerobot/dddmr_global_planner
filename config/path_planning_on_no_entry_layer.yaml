perception_3d_global:
  ros__parameters:
    global_frame: "map"
    robot_base_frame: "base_link"
    max_obstacle_distance: 9999.0
    inscribed_radius: 0.5
    inflation_descending_rate: 2.0
    inflation_radius: 1.5
    sensors_collected_frequency: 5.0
    plugins: ["map", "no_entry_layer"]
    map:
      plugin: "perception_3d::StaticLayer"
    no_entry_layer:
      plugin: "perception_3d::NoEntryLayer"
      no_entry_zone_pcd_file_dir: "/root/dddmr_navigation/src/dddmr_perception_3d/config/no_entry_layer.yaml" #Abs path   
      inflation_distance: 1.0

global_planner:
  ros__parameters:
    use_static_layer_in_perception_3d: true #If false: subscribe to ground point cloud topic. if true: use perception_3d static layer
    use_adaptive_connection: false #If true: the neighbors of node is sparse, it will automatically increase search radius.
    adaptive_connection_number: 20
    radius_of_ground_connection: 1.5 #If use_adaptive_connection=false, the radius search of the node is applied.
    boundary_reject_threshold: 1 #if connection number of a node is lower than this value, we consider this node as boundary, make the robot less prefer, noted that this value is related to the resolution of ground
    turning_weight: 0.1 #Punish the zig-zag path
    intensity_search_radius: 1.0 #this value is suggested to be 1.0 meters, because if it is too large, the narrow passage will be miscalculated
    intensity_search_punish_weight: 0.1 #the weight for a node. Set this value higher means we dont like path planning cross a orphan node.